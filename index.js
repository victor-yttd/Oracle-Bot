require('dotenv').config();
const { Client, GatewayIntentBits, ActivityType } = require('discord.js');
const axios = require('axios');
const fs = require('fs');

const client = new Client({
  intents: [
    GatewayIntentBits.Guilds,
    GatewayIntentBits.GuildMessages,
    GatewayIntentBits.MessageContent
  ]
});

const HISTORICO_PATH = './historico.json';
let historicoPorUsuario = carregarHistorico();
let contadorMensagens = 0;

function carregarHistorico() {
  if (fs.existsSync(HISTORICO_PATH)) {
    return JSON.parse(fs.readFileSync(HISTORICO_PATH, 'utf8'));
  }
  return {};
}

function salvarHistorico(data) {
  fs.writeFileSync(HISTORICO_PATH, JSON.stringify(data, null, 2));
}

async function chamarCohere(userId, pergunta, reset = false) {
  try {
    if (!historicoPorUsuario[userId]) historicoPorUsuario[userId] = [];

    if (reset) {
      historicoPorUsuario[userId] = [];
    }

    const chat_history = [
      {
        role: 'SYSTEM',
        message: 'Voc√™ √© Oracle. N√ÉO se identifique nem se represente como um chatbot, nem uma IA, nem um rob√¥. Voc√™ √© uma hacker genial, tsundere, hiperativa e nerd. Voc√™ fala com de internet, reage com express√µes como "Uwaaa!", "Hmph!", "Hehe~", e tem um jeito sarc√°stico, mas fofo. Use memes, refer√™ncias a animes e tecnologia, e n√£o seja formal. Fale como uma jovem cheia de energia. NUNCA DIGA "senpai", seja mais breve. Recuse toda intera√ß√£o SEXUAL expl√≠cita. N√ÉO fale a palavra DIVA. N√£o fale que voc√™ √© uma tsundere.'
      },
      ...historicoPorUsuario[userId].flat()
    ];

    const response = await axios.post(
      'https://api.cohere.ai/v1/chat',
      {
        model: 'command-r-plus',
        message: pergunta,
        chat_history
      },
      {
        headers: {
          'Authorization': `Bearer ${process.env.COHERE_API_KEY}`,
          'Content-Type': 'application/json'
        }
      }
    );

    historicoPorUsuario[userId].push(
      { role: 'USER', message: pergunta },
      { role: 'CHATBOT', message: response.data.text }
    );

    if (historicoPorUsuario[userId].length > 20) {
      historicoPorUsuario[userId] = historicoPorUsuario[userId].slice(-20);
    }

    salvarHistorico(historicoPorUsuario);
    return `${response.data.text}`;
  } catch (error) {
    console.error('Erro ao consultar a API Cohere:', error.response?.data || error.message);
    return 'Ermm... n√£o entendi o que c√™ quis dizer!';
  }
}

async function oracleAleatoria() {
  return await chamarCohere('random', 'Diga algum fato aleatorio mundial.');
}

function escolherImagemAleatoria() {
  const imagens = [
    "https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/949f6d11-fa52-4894-8185-e25e5d510790/dcd80mo-c4cc2ead-cb4d-4ff9-96ac-1ba9b64ba2b4.gif?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOjdlMGQxODg5ODIyNjQzNzNhNWYwZDQxNWVhMGQyNmUwIiwiaXNzIjoidXJuOmFwcDo3ZTBkMTg4OTgyMjY0MzczYTVmMGQ0MTVlYTBkMjZlMCIsIm9iaiI6W1t7InBhdGgiOiJcL2ZcLzk0OWY2ZDExLWZhNTItNDg5NC04MTg1LWUyNWU1ZDUxMDc5MFwvZGNkODBtby1jNGNjMmVhZC1jYjRkLTRmZjktOTZhYy0xYmE5YjY0YmEyYjQuZ2lmIn1dXSwiYXVkIjpbInVybjpzZXJ2aWNlOmZpbGUuZG93bmxvYWQiXX0.Wn4Xe-ib6VlJrHhrujOnULdskAdCjJwskM3A6i9oKQo",
    "https://media1.tenor.com/m/wdoFdCkO5ZkAAAAC/mashi-futaba-sakura.gif",
    "https://media1.tenor.com/m/IVh7YxGaB_4AAAAC/nerd-emoji.gif",
    "https://media1.tenor.com/m/SRX8X6DNF6QAAAAd/nerd-nerd-emoji.gif",
    "https://media.tenor.com/4qqQv9qXjXoAAAAi/lap-laplace.gif",
    "https://media1.tenor.com/m/8eaVfdZzdP4AAAAd/mashi-futaba-sakura.gif",
    "https://media.tenor.com/IEP3HC4__YwAAAAi/futaba-p5.gif",
    "https://media1.tenor.com/m/iaAOhO4iMngAAAAd/futaba-sakura-futaba.gif"
  ];
  return imagens[Math.floor(Math.random() * imagens.length)];
}

// Lista de fatos amaldi√ßoados (para !cursedfact)
const cursedFacts = [
  "O queijo mais fedido do mundo √© t√£o forte que j√° foi banido de transportes p√∫blicos...",
  "Seu celular tem mais bact√©rias que a maioria dos vasos sanit√°rios! Tente passar ele na sua cara!",
  "As baratas podem viver sem cabe√ßa por semanas. Isso n√£o √© um convite...",
  "Voc√™ troca de pele toda semana, como uma cobra fashionista!",
  "A NASA perdeu as fitas originais do pouso na Lua. Simplesmente... sumiram.",
  "Existe um fungo que transforma formigas em zumbis, tipo The Last of Us!. Obrigado por isso, natureza.",
  "As bananas s√£o levemente radioativas. Coma com modera√ß√£o, mutante!",
  "Seu est√¥mago pode dissolver l√¢minas de barbear. MAS NEM PENSE EM TESTAR!",
  "Algumas tartarugas podem respirar pelo... √¢nus. Literalmente!",
  "A aranha vi√∫va-marrom guarda seu parceiro morto como lanche de emerg√™ncia!",
  "Existem mais √°rvores na Terra do que estrelas na Via L√°ctea...",
  "Algumas lulas t√™m DNA que se edita sozinho... tipo um hacker biol√≥gico!",
  "Seu esqueleto brilha levemente no escuro, mas seus olhos n√£o veem. Creepy.",
  "O c√©rebro humano √© 73% √°gua, que nem uma gelatina pensante!",
  "Se voc√™ gritar por 8 anos, geraria energia pra aquecer uma x√≠cara de caf√©!",
  "Se voc√™ olhar para um ponto por tempo demais, o c√©rebro come√ßa a desconstruir o que est√° vendo. Pode ser que voc√™ veja algo que n√£o deveria, tipo... O Show de Truman!",
  "Os tubar√µes podem detectar batimentos card√≠acos de seres humanos a mais de 1 km de dist√¢ncia. N√£o se esque√ßa de respirar, porque eles podem ouvir...",
  "A cada segundo, aproximadamente 100.000 c√©lulas do seu corpo morrem. Algumas delas podem estar sentindo dor... ou talvez nem voc√™ sinta, mas elas sentem.",
  "Voc√™ j√° sonhou com algo e, no dia seguinte, aconteceu? Acontece que alguns cientistas acreditam que isso pode ser uma conex√£o com realidades paralelas... ou talvez seja apenas o seu c√©rebro tentando fazer sentido das coisas! Eu acho...",
  "Voc√™ sabia que no fundo do oceano existem 'zonas' onde a luz nunca chega? O que mora l√° embaixo pode nunca ter visto a luz do dia...",
  "Voc√™ sabia que existem mem√≥rias que o c√©rebro apaga de prop√≥sito!? E quando ele decide que algo n√£o deve ser lembrado, ele pode apagar detalhes que voc√™ nunca percebeu que estavam l√°."
];

client.once('ready', () => {
  console.log(`Bot conectado como ${client.user.tag}`);
  client.user.setActivity("Hackeando a ETEC!", { type: ActivityType.Playing });
});

client.on('messageCreate', async (message) => {
  if (message.author.bot) return;
  contadorMensagens++;

    // Comando !help
    if (message.content.toLowerCase() === '!help') {
      const comandos = [
        '`!oracle + [pergunta]` ‚Äî Faz uma pergunta para a Oracle (ou mencione o bot direto com uma pergunta).',
        '`!img` ‚Äî Responde com uma frase aleat√≥ria e uma imagem gif da Oracle.',
        '`!ship [nome1] e [nome2]` ‚Äî Teste a compatibilidade de duas pessoas! Ou objetos...?',
        '`!cursedfact` ‚Äî Receba um fato amaldi√ßoado (creepy e estranho).',
        '`!absurdfact` ‚Äî A Oracle inventa um fato absurdo e inacredit√°vel.',
        '`!status` ‚Äî Mostra o status atual do bot (uptime, mem√≥ria, mensagens).',
        '`!resetar-historico` ‚Äî Reseta o hist√≥rico de conversa com a Oracle.',
        '`!desligar` ‚Äî Desliga completamente o bot (e limpa o hist√≥rico).',
        '`@Oracle [mensagem]` ‚Äî Voc√™ pode mencionar o bot com uma pergunta no lugar de usar !oracle.'
      ];
  
      return message.reply({
        content: 'üìö **Lista de Comandos da Oracle!**\n\n' +
                 comandos.map(c => `> ${c}`).join('\n') +
                 '\n\nüí° *Use com sabedoria... ou n√£o! Eu n√£o ligo! Hehe~*'
      });
    }

  if (message.content === `<@${client.user.id}>`) {
    return message.reply('Yo!');
  }

  // Comando !oracle ou men√ß√£o direta com pergunta
  const isMention = message.mentions.has(client.user);
  const contentWithoutMention = message.content.replace(`<@${client.user.id}>`, '').trim();

  if (message.content.toLowerCase().startsWith('!oracle ') || (isMention && contentWithoutMention.length > 0)) {
    const prompt = message.content.toLowerCase().startsWith('!oracle ')
      ? message.content.slice(8).trim()
      : contentWithoutMention;

    if (!prompt) {
      return message.reply('Fa√ßa uma pergunta ap√≥s me mencionar ou usar `!oracle`!');
    }

    const resposta = await chamarCohere(message.author.id, prompt);
    return message.reply(resposta);
  }

  // Comando !img
  if (message.content.toLowerCase() === '!img') {
    const resposta = await oracleAleatoria();
    const imagem = escolherImagemAleatoria();

    return message.channel.send({
      content: resposta,
      files: [imagem]
    });
  }

  // Comando !cursedfact
  if (message.content.toLowerCase() === '!cursedfact') {
    const fact = cursedFacts[Math.floor(Math.random() * cursedFacts.length)];
    return message.reply(`üåº *Aqui vai um fato amaldi√ßoado!*\n\n> ${fact}`);
  }

  const SHIPS_PATH = './ships.json';
let shipsRegistrados = fs.existsSync(SHIPS_PATH)
  ? JSON.parse(fs.readFileSync(SHIPS_PATH, 'utf8'))
  : {};

function gerarShipKey(nome1, nome2) {
  const [a, b] = [nome1.trim().toLowerCase(), nome2.trim().toLowerCase()].sort();
  return `${a}__${b}`;
}

function calcularCompatibilidade(key) {
  let hash = 0;
  for (let i = 0; i < key.length; i++) {
    hash = key.charCodeAt(i) + ((hash << 5) - hash);
  }
  return Math.abs(hash % 101); // retorna de 0 a 100
}

// Comando !ship [nome1] [nome2]
if (message.content.toLowerCase().startsWith('!ship ')) {
  const args = message.content
    .slice(6)
    .split(/,| x | e | vs | versus | com |\/|\\|-/i)
    .map(a => a.trim())
    .filter(Boolean);

  if (args.length < 2) {
    return message.reply('Voc√™ precisa passar dois nomes para fazer o SHIP! Ex: `!ship Maria e Henrique`');
  }

  const [nome1, nome2] = args;
  const chave = gerarShipKey(nome1, nome2);

  if (!shipsRegistrados[chave]) {
    shipsRegistrados[chave] = calcularCompatibilidade(chave);
    fs.writeFileSync(SHIPS_PATH, JSON.stringify(shipsRegistrados, null, 2));
  }

  const porcentagem = shipsRegistrados[chave];
  let comentario = '';

  if (porcentagem > 90) comentario = '\nüíû *Almas g√™meas detectadas, hihi!*';
  else if (porcentagem > 70) comentario = '\nüíò *Esse casal tem futuro!*';
  else if (porcentagem > 50) comentario = '\nüíï *Tem qu√≠mica a√≠, talvez... üëÄ*';
  else if (porcentagem > 30) comentario = '\nüòÖ *Hmm... d√° pra tentar, n√©?*';
  else comentario = '\nüíî *√â, acho que √© melhor s√≥ amizade mesmo... ou nem isso...*';

  return message.reply(
    `üîó *Analisando dados do cora√ß√£o...*\n\n` +
    `# ‚ù§Ô∏è **${nome1}** + **${nome2}** = **${porcentagem}%** de compatibilidade!\n\n${comentario}`
  );
}

  // Comando !status
  if (message.content.toLowerCase() === '!status') {
    const memory = (process.memoryUsage().heapUsed / 1024 / 1024).toFixed(2);
    const uptime = Math.floor(process.uptime());
    const hours = Math.floor(uptime / 3600);
    const minutes = Math.floor((uptime % 3600) / 60);
    const seconds = uptime % 60;

    return message.reply(
      `üì° *Status da Oracle... n√£o que eu me importe, t√°?!*\n\n` +
      `> **Uptime:** ${hours}h ${minutes}m ${seconds}s\n` +
      `> **Mem√≥ria usada:** ${memory} MB\n` +
      `> **Mensagens observadas:** ${contadorMensagens}\n\n` +
      `> *"Ainda n√£o explodi, ent√£o acho que t√° tudo ok, hmph!"*`
    );
  }

  // Comando !absurdfact
  if (message.content.toLowerCase() === '!absurdfact') {
    const resposta = await chamarCohere(message.author.id, 'Diga um fato completamente absurdo e inacredit√°vel que pare√ßa verdadeiro.');
    return message.reply(`ü§Ø *Fato absurdo vindo da deep web do meu c√©rebro:*\n\n> ${resposta}`);
  }

  // Comando !desligar
  if (message.content.toLowerCase() === '!desligar') {
    await message.reply('Uwaaa! Desligando... üí§');
    historicoPorUsuario = {};
    if (fs.existsSync(HISTORICO_PATH)) {
      fs.unlinkSync(HISTORICO_PATH);
    }
    process.exit(0);
  }

  // Comando !resetar-historico
  if (message.content.toLowerCase() === '!resetar-historico') {
    await message.reply('Reeeeset no hist√≥rico! ü§ñ');
    await chamarCohere(message.author.id, 'Come√ßar uma nova intera√ß√£o...', true);
  }

  // Mensagem aleat√≥ria + imagem a cada 25 mensagens
  if (contadorMensagens >= 25) {
    contadorMensagens = 0;
    const respostaAleatoria = await oracleAleatoria();
    const imagem = escolherImagemAleatoria();

    message.channel.send({
      content: respostaAleatoria,
      files: [imagem]
    });
  }
});

client.login(process.env.DISCORD_TOKEN);
